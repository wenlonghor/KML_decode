
import model.KMLbean;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JLabel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author LONG
 */
public class Jdelete extends javax.swing.JFrame {

    /**
     * Creates new form Jdelete
     */
    File f = null;
    String filename;

    public Jdelete() {
        initComponents();

        jButton1.enable(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("处理");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jLabel2.setText("实现将KML文件中<description>字段删除及合并<coordinates>字段");

        jButton2.setText("选择文件");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        JFileChooser jfc = new JFileChooser();
        jfc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        jfc.showDialog(new JLabel(), "选择");
        File file = jfc.getSelectedFile();
        if (file.isFile()) {
            System.out.println("文件:" + file.getAbsolutePath());
            filename = file.getAbsolutePath();
            jLabel1.setText("文件读取成功。。。");
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        FileOutputStream out = null;
        FileOutputStream outSTr = null;
        BufferedOutputStream Buff = null;

        BufferedReader br;
        try {
            br = new BufferedReader(new InputStreamReader(new FileInputStream(filename), "UTF-8"));
            StringBuffer sb = new StringBuffer();
            String desc1 = "";
            String desc2 = "";
            while ((desc1 = br.readLine()) != null) {
                if (desc1.contains("<description>")) {
                    while (!br.readLine().contains("</description>")) {
                    }
                } else {
                    sb.append(desc1).append("\r\n ");
                }
                //sb.append(desc1).append("\r\n ");
            }
            br.close();
            //BufferedWriter newfile = new BufferedWriter(new FileWriter("D:/安国市光缆1.kml"));
            OutputStreamWriter write = new OutputStreamWriter(new FileOutputStream(filename), "UTF-8");
            write.write(sb.toString());
            write.close();

            br = new BufferedReader(new InputStreamReader(new FileInputStream(filename), "UTF-8"));
            //data d = new data("D:/安国市光缆1.kml");
            sb = new StringBuffer();
            desc1 = "";
            desc2 = "";
            ArrayList<KMLbean> list = new ArrayList();
            ArrayList<KMLbean> list1 = new ArrayList() {
                public String toString() {
                    String tmp = "";
                    for (int i = 0; i < this.size(); i++) {
                        tmp = tmp + this.get(i).toString();
                    }
                    return tmp;
                }
            };
            while ((desc1 = br.readLine()) != null) {
                if (desc1.contains("<Placemark")) {
                    KMLbean kml = new KMLbean();
                    String id = desc1.replace("<Placemark id=\"", "").replace("\">", "");
                    kml.setId(id.trim());
                    while (!(desc2 = br.readLine()).contains("</Placemark>")) {
                        if (desc2.contains("<name")) {
                            String name = desc2.replace("<name>", "").replace("</name>", "");
                            kml.setName(name.trim());
                        }
                        if (desc2.contains("<coordinates>")) {
                            ArrayList a = new ArrayList();
                            a = kml.getCoordinates();
                            a.add(br.readLine().trim());
                            kml.setCoordinates(a);
                        }
                    }
                    list.add(kml);
                } else if (desc1.contains("<Folder")) {
//                    while (!(desc2 = br.readLine()).contains("</Folder>")) {
//                    }
//                    br.readLine();
                } else {
                    sb.append(desc1).append("\r\n ");
                }
                //sb.append(desc1).append("\r\n ");
            }
            //=======遍历list 找出相同的坐标点来======= 
            for (int i = 0; i < list.size(); i++) {
                KMLbean tmpKML = new KMLbean();
                tmpKML = list.get(i);
                String name = tmpKML.getName();
                for (int j = i + 1; j < list.size(); j++) {
                    if (tmpKML.getName().equals(list.get(j).getName())) {
                        ArrayList a = new ArrayList();
                        a = tmpKML.getCoordinates();
                        list.get(j).getCoordinates();
                        for (int k = 0; k < list.get(j).getCoordinates().size(); k++) {
                            a.add(list.get(j).getCoordinates().get(k));
                        }
                        tmpKML.setCoordinates(a);
                        list.remove(j);
                        --j;
                    }
                }
                list1.add(tmpKML);
                tmpKML = null;
            }
            OutputStreamWriter write1 = new OutputStreamWriter(new FileOutputStream(filename), "UTF-8");
            //System.out.println(list1.toString().replace("\t", ""));
            //System.out.println(sb.toString().replace("</Document>", "").replace("</kml>","")+list1.toString().replace("\t", "").replace("[","").replace("]","")+"</Document>\t\n</kml>");
            write1.write(sb.toString().replace("</Document>", "").replace("</kml>", "").replace("</Folder>", "")  + list1.toString().replace("\t", "").replace("[", "").replace("]", "")+ "</Document>\t\n</kml>");
            write1.flush();
            write1.close();
            br = null;
            jLabel1.setText("文件修改成功");
            jButton1.enable(false);
        } catch (Exception ex) {
        }
        //data d = new data("D:/安国市光缆1.kml");

    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Jdelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Jdelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Jdelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Jdelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Jdelete().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
